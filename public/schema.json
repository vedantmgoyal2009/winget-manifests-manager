{
  "$id": "https://github.com/vedantmgoyal2009/vedantmgoyal2009/raw/main/winget-pkgs-automation/schema.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "WinGet Community Manifests Manager - Automation Schema",
  "type": "object",
  "required": [
    "$schema",
    "Identifier",
    "Update",
    "PostResponseScript",
    "VersionRegex",
    "InstallerRegex",
    "PreviousVersion",
    "ManifestFields",
    "AdditionalInfo",
    "PostUpgradeScript",
    "YamlCreateParams",
    "SkipPackage"
  ],
  "properties": {
    "$schema": {
      "$id": "#/properties/%24schema",
      "enum": [
        "https://github.com/vedantmgoyal2009/vedantmgoyal2009/raw/main/winget-pkgs-automation/schema.json"
      ],
      "type": "string"
    },
    "Identifier": {
      "$id": "#/properties/Identifier",
      "type": "string"
    },
    "Update": {
      "$id": "#/properties/Update",
      "type": "object",
      "required": [
        "InvokeType",
        "Uri",
        "Method",
        "Headers",
        "Body",
        "UserAgent"
      ],
      "properties": {
        "InvokeType": {
          "$id": "#/properties/Update/properties/InvokeType",
          "enum": [
            "RestMethod",
            "WebRequest"
          ],
          "type": "string"
        },
        "Uri": {
          "$id": "#/properties/Update/properties/Uri",
          "type": "string"
        },
        "Method": {
          "$id": "#/properties/Update/properties/Method",
          "enum": [
            "Default",
            "Delete",
            "Get",
            "Head",
            "Merge",
            "Options",
            "Patch",
            "Post",
            "Put",
            "Trace"
          ],
          "type": "string"
        },
        "Headers": {
          "$id": "#/properties/Update/properties/Headers",
          "type": "object",
          "additionalProperties": true
        },
        "Body": {
          "$id": "#/properties/Update/properties/Body",
          "type": "string"
        },
        "UserAgent": {
          "$id": "#/properties/Update/properties/UserAgent",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PostResponseScript": {
      "$id": "#/properties/PostResponseScript",
      "type": [
        "string",
        "array"
      ],
      "examples": [
        "$UpdateCondition = $Response.prerelease -eq $PreRelease -and $Response.id -gt $PreviousReleaseId #default-gh",
        "$Response = $Response.BaseResponse.RequestMessage.RequestUri.OriginalString #default-headrequest",
        "$Response = $Response | ConvertFrom-Yaml",
        "$Response = [System.Text.Encoding]::UTF8.GetString($Response.RawContentStream.ToArray()) | ConvertFrom-Yaml"
      ]
    },
    "VersionRegex": {
      "$id": "#/properties/VersionRegex",
      "type": "string",
      "default": "(?<=v)[0-9.]+"
    },
    "InstallerRegex": {
      "$id": "#/properties/InstallerRegex",
      "type": "string",
      "default": ".(exe|msi|msix|appx)(bundle){0,1}$"
    },
    "PreviousVersion": {
      "$id": "#/properties/PreviousVersion",
      "type": "string"
    },
    "ManifestFields": {
      "$id": "#/properties/ManifestFields",
      "type": "object",
      "required": [
        "PackageVersion",
        "InstallerUrls"
      ],
      "properties": {
        "PackageVersion": {
          "$id": "#/properties/ManifestFields/properties/PackageVersion",
          "type": "string",
          "examples": [
            "$Response.tag_name.TrimStart('v') #default-gh",
            "($Response | Select-String -Pattern $VersionRegex).Matches.Value #default-headrequest",
            "$Response.version"
          ]
        },
        "InstallerUrls": {
          "$id": "#/properties/ManifestFields/properties/InstallerUrls",
          "type": "string",
          "examples": [
            "$Response.assets | ForEach-Object { if ($_.name -match $InstallerRegex) { $_.browser_download_url } } #default-gh",
            "$Response #default-headrequest",
            "$InstUri.Replace('#version', $Response.version)"
          ]
        },
        "ProductCode": {
          "$id": "#/properties/ManifestFields/properties/ProductCode",
          "type": "string"
        },
        "ReleaseDate": {
          "$id": "#/properties/ManifestFields/properties/ReleaseDate",
          "type": "string",
          "default": "(Get-Date -Date $Response.published_at).ToString('yyyy-MM-dd')"
        },
        "ReleaseNotesUrl": {
          "$id": "#/properties/ManifestFields/properties/ReleaseNotesUrl",
          "type": "string",
          "examples": [
            "$Response.html_url #default-gh"
          ]
        },
        "ReleaseNotes": {
          "$id": "#/properties/ManifestFields/properties/ReleaseNotes",
          "type": "string"
        },
        "AppsAndFeaturesEntries": {
          "$id": "#/properties/ManifestFields/properties/AppsAndFeaturesEntries",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "DisplayName": {
                "type": "string"
              },
              "Publisher": {
                "type": "string"
              },
              "DisplayVersion": {
                "type": "string"
              },
              "ProductCode": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": true
    },
    "AdditionalInfo": {
      "$id": "#/properties/AdditionalInfo",
      "type": "object",
      "additionalProperties": true
    },
    "PostUpgradeScript": {
      "$id": "#/properties/PostUpgradeScript",
      "type": "string",
      "examples": [
        "$Package.AdditionalInfo.PreviousReleaseId = $Response.id #default-gh"
      ]
    },
    "YamlCreateParams": {
      "$id": "#/properties/YamlCreateParams",
      "type": "object",
      "required": [
        "SkipPRCheck",
        "DeletePreviousVersion"
      ],
      "properties": {
        "SkipPRCheck": {
          "$id": "#/properties/YamlCreateParams/properties/SkipPRCheck",
          "type": "boolean",
          "default": false
        },
        "DeletePreviousVersion": {
          "$id": "#/properties/YamlCreateParams/properties/DeletePreviousVersion",
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "SkipPackage": {
      "$id": "#/properties/SkipPackage",
      "enum": [
        false,
        "Automatically marked as stale, not updated for 2.5 years"
      ],
      "type": [
        "boolean",
        "string"
      ],
      "default": false
    }
  },
  "additionalProperties": false
}